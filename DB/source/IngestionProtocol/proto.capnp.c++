// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: proto.capnp

#include "proto.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<46> b_8f5c9e4d7fb9e67a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    122, 230, 185, 127,  77, 158,  92, 143,
     12,   0,   0,   0,   1,   0,   0,   0,
     10, 184, 112,   8,  58, 101,  21, 187,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  84,  97, 103,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8f5c9e4d7fb9e67a = b_8f5c9e4d7fb9e67a.words;
#if !CAPNP_LITE
static const uint16_t m_8f5c9e4d7fb9e67a[] = {0, 1};
static const uint16_t i_8f5c9e4d7fb9e67a[] = {0, 1};
const ::capnp::_::RawSchema s_8f5c9e4d7fb9e67a = {
  0x8f5c9e4d7fb9e67a, b_8f5c9e4d7fb9e67a.words, 46, nullptr, m_8f5c9e4d7fb9e67a,
  0, 2, i_8f5c9e4d7fb9e67a, nullptr, nullptr, { &s_8f5c9e4d7fb9e67a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_e37d7cb5a78d39c6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    198,  57, 141, 167, 181, 124, 125, 227,
     12,   0,   0,   0,   1,   0,   0,   0,
     10, 184, 112,   8,  58, 101,  21, 187,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  66,  97, 116,  99,
    104,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    180,  40, 208,  76, 202,  88, 198, 208,
      1,   0,   0,   0,  66,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  99, 111, 114, 100, 105, 110,
    103, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    180,  40, 208,  76, 202,  88, 198, 208,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e37d7cb5a78d39c6 = b_e37d7cb5a78d39c6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e37d7cb5a78d39c6[] = {
  &s_d0c658ca4cd028b4,
};
static const uint16_t m_e37d7cb5a78d39c6[] = {0};
static const uint16_t i_e37d7cb5a78d39c6[] = {0};
const ::capnp::_::RawSchema s_e37d7cb5a78d39c6 = {
  0xe37d7cb5a78d39c6, b_e37d7cb5a78d39c6.words, 40, d_e37d7cb5a78d39c6, m_e37d7cb5a78d39c6,
  1, 1, i_e37d7cb5a78d39c6, nullptr, nullptr, { &s_e37d7cb5a78d39c6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<92> b_d0c658ca4cd028b4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    180,  40, 208,  76, 202,  88, 198, 208,
     18,   0,   0,   0,   1,   0,   1,   0,
    198,  57, 141, 167, 181, 124, 125, 227,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  66,  97, 116,  99,
    104,  46,  77, 101, 115, 115,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     11, 131,  23,  73, 163,  79, 243, 186,
      1,   0,   0,   0,  98,   0,   0,   0,
     77, 101,  97, 115, 117, 114, 101, 109,
    101, 110, 116,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 116, 114, 105,  99,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,  97, 103, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    122, 230, 185, 127,  77, 158,  92, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101,  97, 115, 117, 114, 101, 109,
    101, 110, 116, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     11, 131,  23,  73, 163,  79, 243, 186,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d0c658ca4cd028b4 = b_d0c658ca4cd028b4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d0c658ca4cd028b4[] = {
  &s_8f5c9e4d7fb9e67a,
  &s_baf34fa34917830b,
};
static const uint16_t m_d0c658ca4cd028b4[] = {2, 0, 1, 3};
static const uint16_t i_d0c658ca4cd028b4[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d0c658ca4cd028b4 = {
  0xd0c658ca4cd028b4, b_d0c658ca4cd028b4.words, 92, d_d0c658ca4cd028b4, m_d0c658ca4cd028b4,
  2, 4, i_d0c658ca4cd028b4, nullptr, nullptr, { &s_d0c658ca4cd028b4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_baf34fa34917830b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     11, 131,  23,  73, 163,  79, 243, 186,
     26,   0,   0,   0,   1,   0,   1,   0,
    180,  40, 208,  76, 202,  88, 198, 208,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  66,  97, 116,  99,
    104,  46,  77, 101, 115, 115,  97, 103,
    101,  46,  77, 101,  97, 115, 117, 114,
    101, 109, 101, 110, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_baf34fa34917830b = b_baf34fa34917830b.words;
#if !CAPNP_LITE
static const uint16_t m_baf34fa34917830b[] = {0, 1};
static const uint16_t i_baf34fa34917830b[] = {0, 1};
const ::capnp::_::RawSchema s_baf34fa34917830b = {
  0xbaf34fa34917830b, b_baf34fa34917830b.words, 49, nullptr, m_baf34fa34917830b,
  0, 2, i_baf34fa34917830b, nullptr, nullptr, { &s_baf34fa34917830b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_bb88e6d9c451f640 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     64, 246,  81, 196, 217, 230, 136, 187,
     12,   0,   0,   0,   1,   0,   1,   0,
     10, 184, 112,   8,  58, 101,  21, 187,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  73, 100,  82, 101,
    113, 117, 101, 115, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
    116,  97, 103,  83, 101, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    122, 230, 185, 127,  77, 158,  92, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 116, 114, 105,  99,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100, 101, 110, 116, 105, 102, 105,
    101, 114,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bb88e6d9c451f640 = b_bb88e6d9c451f640.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bb88e6d9c451f640[] = {
  &s_8f5c9e4d7fb9e67a,
};
static const uint16_t m_bb88e6d9c451f640[] = {2, 1, 0};
static const uint16_t i_bb88e6d9c451f640[] = {0, 1, 2};
const ::capnp::_::RawSchema s_bb88e6d9c451f640 = {
  0xbb88e6d9c451f640, b_bb88e6d9c451f640.words, 67, d_bb88e6d9c451f640, m_bb88e6d9c451f640,
  1, 3, i_bb88e6d9c451f640, nullptr, nullptr, { &s_bb88e6d9c451f640, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_e4af5e70ab80863a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     58, 134, 128, 171, 112,  94, 175, 228,
     12,   0,   0,   0,   1,   0,   2,   0,
     10, 184, 112,   8,  58, 101,  21, 187,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  73, 100,  82, 101,
    115, 112, 111, 110, 115, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 116,  73, 100,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100, 101, 110, 116, 105, 102, 105,
    101, 114,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e4af5e70ab80863a = b_e4af5e70ab80863a.words;
#if !CAPNP_LITE
static const uint16_t m_e4af5e70ab80863a[] = {1, 0};
static const uint16_t i_e4af5e70ab80863a[] = {0, 1};
const ::capnp::_::RawSchema s_e4af5e70ab80863a = {
  0xe4af5e70ab80863a, b_e4af5e70ab80863a.words, 48, nullptr, m_e4af5e70ab80863a,
  0, 2, i_e4af5e70ab80863a, nullptr, nullptr, { &s_e4af5e70ab80863a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<41> b_88fd41bfd5a83ea2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    162,  62, 168, 213, 191,  65, 253, 136,
     12,   0,   0,   0,   1,   0,   0,   0,
     10, 184, 112,   8,  58, 101,  21, 187,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  73, 110, 115, 101,
    114, 116, 105, 111, 110,  66,  97, 116,
     99, 104,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     92,  28, 254,  63,  78, 125, 207, 146,
      1,   0,   0,   0,  66,   0,   0,   0,
     77, 101, 115, 115,  97, 103, 101,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    114, 101,  99, 111, 114, 100, 105, 110,
    103, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     92,  28, 254,  63,  78, 125, 207, 146,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_88fd41bfd5a83ea2 = b_88fd41bfd5a83ea2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_88fd41bfd5a83ea2[] = {
  &s_92cf7d4e3ffe1c5c,
};
static const uint16_t m_88fd41bfd5a83ea2[] = {0};
static const uint16_t i_88fd41bfd5a83ea2[] = {0};
const ::capnp::_::RawSchema s_88fd41bfd5a83ea2 = {
  0x88fd41bfd5a83ea2, b_88fd41bfd5a83ea2.words, 41, d_88fd41bfd5a83ea2, m_88fd41bfd5a83ea2,
  1, 1, i_88fd41bfd5a83ea2, nullptr, nullptr, { &s_88fd41bfd5a83ea2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<58> b_92cf7d4e3ffe1c5c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     92,  28, 254,  63,  78, 125, 207, 146,
     27,   0,   0,   0,   1,   0,   1,   0,
    162,  62, 168, 213, 191,  65, 253, 136,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  73, 110, 115, 101,
    114, 116, 105, 111, 110,  66,  97, 116,
     99, 104,  46,  77, 101, 115, 115,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    156,  42,  79, 248,  85, 121, 150, 148,
      1,   0,   0,   0,  98,   0,   0,   0,
     77, 101,  97, 115, 117, 114, 101, 109,
    101, 110, 116,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    116,  97, 103,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101,  97, 115, 117, 114, 101, 109,
    101, 110, 116, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    156,  42,  79, 248,  85, 121, 150, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_92cf7d4e3ffe1c5c = b_92cf7d4e3ffe1c5c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_92cf7d4e3ffe1c5c[] = {
  &s_94967955f84f2a9c,
};
static const uint16_t m_92cf7d4e3ffe1c5c[] = {1, 0};
static const uint16_t i_92cf7d4e3ffe1c5c[] = {0, 1};
const ::capnp::_::RawSchema s_92cf7d4e3ffe1c5c = {
  0x92cf7d4e3ffe1c5c, b_92cf7d4e3ffe1c5c.words, 58, d_92cf7d4e3ffe1c5c, m_92cf7d4e3ffe1c5c,
  1, 2, i_92cf7d4e3ffe1c5c, nullptr, nullptr, { &s_92cf7d4e3ffe1c5c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_94967955f84f2a9c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    156,  42,  79, 248,  85, 121, 150, 148,
     35,   0,   0,   0,   1,   0,   2,   0,
     92,  28, 254,  63,  78, 125, 207, 146,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  73, 110, 115, 101,
    114, 116, 105, 111, 110,  66,  97, 116,
     99, 104,  46,  77, 101, 115, 115,  97,
    103, 101,  46,  77, 101,  97, 115, 117,
    114, 101, 109, 101, 110, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_94967955f84f2a9c = b_94967955f84f2a9c.words;
#if !CAPNP_LITE
static const uint16_t m_94967955f84f2a9c[] = {0, 1};
static const uint16_t i_94967955f84f2a9c[] = {0, 1};
const ::capnp::_::RawSchema s_94967955f84f2a9c = {
  0x94967955f84f2a9c, b_94967955f84f2a9c.words, 51, nullptr, m_94967955f84f2a9c,
  0, 2, i_94967955f84f2a9c, nullptr, nullptr, { &s_94967955f84f2a9c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_9abe3317c5a46e4e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     78, 110, 164, 197,  23,  51, 190, 154,
     12,   0,   0,   0,   1,   0,   0,   0,
     10, 184, 112,   8,  58, 101,  21, 187,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  73, 110, 115, 101,
    114, 116, 105, 111, 110,  82, 101, 115,
    112, 111, 110, 115, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_9abe3317c5a46e4e = b_9abe3317c5a46e4e.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9abe3317c5a46e4e = {
  0x9abe3317c5a46e4e, b_9abe3317c5a46e4e.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9abe3317c5a46e4e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_b4d05bbf58a7601c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     28,  96, 167,  88, 191,  91, 208, 180,
     12,   0,   0,   0,   1,   0,   0,   0,
     10, 184, 112,   8,  58, 101,  21, 187,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  81, 117, 101, 114,
    121,  77, 101, 115, 115,  97, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    113, 117, 101, 114, 121,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b4d05bbf58a7601c = b_b4d05bbf58a7601c.words;
#if !CAPNP_LITE
static const uint16_t m_b4d05bbf58a7601c[] = {0};
static const uint16_t i_b4d05bbf58a7601c[] = {0};
const ::capnp::_::RawSchema s_b4d05bbf58a7601c = {
  0xb4d05bbf58a7601c, b_b4d05bbf58a7601c.words, 33, nullptr, m_b4d05bbf58a7601c,
  0, 1, i_b4d05bbf58a7601c, nullptr, nullptr, { &s_b4d05bbf58a7601c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_85ff94adeb6baae9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    233, 170, 107, 235, 173, 148, 255, 133,
     12,   0,   0,   0,   1,   0,   0,   0,
     10, 184, 112,   8,  58, 101,  21, 187,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  81, 117, 101, 114,
    121,  82, 101, 115, 117, 108, 116,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    119,  68, 240,  86, 195, 165,  20, 191,
      1,   0,   0,   0,  98,   0,   0,   0,
     77, 101,  97, 115, 117, 114, 101, 109,
    101, 110, 116,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    119,  68, 240,  86, 195, 165,  20, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_85ff94adeb6baae9 = b_85ff94adeb6baae9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_85ff94adeb6baae9[] = {
  &s_bf14a5c356f04477,
};
static const uint16_t m_85ff94adeb6baae9[] = {0};
static const uint16_t i_85ff94adeb6baae9[] = {0};
const ::capnp::_::RawSchema s_85ff94adeb6baae9 = {
  0x85ff94adeb6baae9, b_85ff94adeb6baae9.words, 40, d_85ff94adeb6baae9, m_85ff94adeb6baae9,
  1, 1, i_85ff94adeb6baae9, nullptr, nullptr, { &s_85ff94adeb6baae9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_bf14a5c356f04477 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    119,  68, 240,  86, 195, 165,  20, 191,
     24,   0,   0,   0,   1,   0,   2,   0,
    233, 170, 107, 235, 173, 148, 255, 133,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  81, 117, 101, 114,
    121,  82, 101, 115, 117, 108, 116,  46,
     77, 101,  97, 115, 117, 114, 101, 109,
    101, 110, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bf14a5c356f04477 = b_bf14a5c356f04477.words;
#if !CAPNP_LITE
static const uint16_t m_bf14a5c356f04477[] = {0, 1};
static const uint16_t i_bf14a5c356f04477[] = {0, 1};
const ::capnp::_::RawSchema s_bf14a5c356f04477 = {
  0xbf14a5c356f04477, b_bf14a5c356f04477.words, 50, nullptr, m_bf14a5c356f04477,
  0, 2, i_bf14a5c356f04477, nullptr, nullptr, { &s_bf14a5c356f04477, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_8e4dc2547ec6a463 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     99, 164, 198, 126,  84, 194,  77, 142,
     12,   0,   0,   0,   1,   0,   1,   0,
     10, 184, 112,   8,  58, 101,  21, 187,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  77,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  77, 101,
    115, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    105, 208,  49,  80, 124, 180,  40, 194,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8e4dc2547ec6a463 = b_8e4dc2547ec6a463.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8e4dc2547ec6a463[] = {
  &s_c228b47c5031d069,
};
static const uint16_t m_8e4dc2547ec6a463[] = {0};
static const uint16_t i_8e4dc2547ec6a463[] = {0};
const ::capnp::_::RawSchema s_8e4dc2547ec6a463 = {
  0x8e4dc2547ec6a463, b_8e4dc2547ec6a463.words, 26, d_8e4dc2547ec6a463, m_8e4dc2547ec6a463,
  1, 1, i_8e4dc2547ec6a463, nullptr, nullptr, { &s_8e4dc2547ec6a463, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_c228b47c5031d069 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    105, 208,  49,  80, 124, 180,  40, 194,
     30,   0,   0,   0,   1,   0,   1,   0,
     99, 164, 198, 126,  84, 194,  77, 142,
      1,   0,   7,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  46,  99,  97,
    112, 110, 112,  58,  77,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  77, 101,
    115, 115,  97, 103, 101,  46, 116, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    105, 100,  82, 101, 113, 117, 101, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     64, 246,  81, 196, 217, 230, 136, 187,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113, 117, 101, 114, 121,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     28,  96, 167,  88, 191,  91, 208, 180,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c228b47c5031d069 = b_c228b47c5031d069.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c228b47c5031d069[] = {
  &s_8e4dc2547ec6a463,
  &s_b4d05bbf58a7601c,
  &s_bb88e6d9c451f640,
};
static const uint16_t m_c228b47c5031d069[] = {0, 1};
static const uint16_t i_c228b47c5031d069[] = {0, 1};
const ::capnp::_::RawSchema s_c228b47c5031d069 = {
  0xc228b47c5031d069, b_c228b47c5031d069.words, 49, d_c228b47c5031d069, m_c228b47c5031d069,
  3, 2, i_c228b47c5031d069, nullptr, nullptr, { &s_c228b47c5031d069, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace proto {

// Tag
constexpr uint16_t Tag::_capnpPrivate::dataWordSize;
constexpr uint16_t Tag::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Tag::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Tag::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Batch
constexpr uint16_t Batch::_capnpPrivate::dataWordSize;
constexpr uint16_t Batch::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Batch::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Batch::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Batch::Message
constexpr uint16_t Batch::Message::_capnpPrivate::dataWordSize;
constexpr uint16_t Batch::Message::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Batch::Message::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Batch::Message::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Batch::Message::Measurement
constexpr uint16_t Batch::Message::Measurement::_capnpPrivate::dataWordSize;
constexpr uint16_t Batch::Message::Measurement::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Batch::Message::Measurement::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Batch::Message::Measurement::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// IdRequest
constexpr uint16_t IdRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t IdRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind IdRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* IdRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// IdResponse
constexpr uint16_t IdResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t IdResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind IdResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* IdResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// InsertionBatch
constexpr uint16_t InsertionBatch::_capnpPrivate::dataWordSize;
constexpr uint16_t InsertionBatch::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind InsertionBatch::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* InsertionBatch::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// InsertionBatch::Message
constexpr uint16_t InsertionBatch::Message::_capnpPrivate::dataWordSize;
constexpr uint16_t InsertionBatch::Message::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind InsertionBatch::Message::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* InsertionBatch::Message::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// InsertionBatch::Message::Measurement
constexpr uint16_t InsertionBatch::Message::Measurement::_capnpPrivate::dataWordSize;
constexpr uint16_t InsertionBatch::Message::Measurement::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind InsertionBatch::Message::Measurement::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* InsertionBatch::Message::Measurement::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// InsertionResponse
constexpr uint16_t InsertionResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t InsertionResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind InsertionResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* InsertionResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// QueryMessage
constexpr uint16_t QueryMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t QueryMessage::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind QueryMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* QueryMessage::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// QueryResult
constexpr uint16_t QueryResult::_capnpPrivate::dataWordSize;
constexpr uint16_t QueryResult::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind QueryResult::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* QueryResult::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// QueryResult::Measurement
constexpr uint16_t QueryResult::Measurement::_capnpPrivate::dataWordSize;
constexpr uint16_t QueryResult::Measurement::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind QueryResult::Measurement::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* QueryResult::Measurement::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ManagementMessage
constexpr uint16_t ManagementMessage::_capnpPrivate::dataWordSize;
constexpr uint16_t ManagementMessage::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ManagementMessage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ManagementMessage::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ManagementMessage::Type
constexpr uint16_t ManagementMessage::Type::_capnpPrivate::dataWordSize;
constexpr uint16_t ManagementMessage::Type::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ManagementMessage::Type::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ManagementMessage::Type::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

